/*

http://localhost/cours_php/l0gan123456.github.io/flexbox.php
http://localhost/cours_php/l0gan123456.github.io/index.html

*/

@font-face{    /* on ajoute une police qu'on a téléchargé au préalable */
    font-family: BlackOpsOne-Regular;
    src: url(/var/www/html/cours_php/l0gan123456.github.io/fonts/BlackOpsOne-Regular.ttf);
}


tr, td, th, table {
    border:1px solid black; 
/* border-collapse: collapse; collapse sert à "coller" les bordures des cellules entre elles */
    border-spacing: 0px;
    border-radius: 15px
}

tr td {
    text-align:center;        /*je prend les td qui sont enfants de tr ( sans virgules ) et je les centre */

}

tr td[colspan="2"] {  /* tous les td enfants de tr qui ont comme paramètres colspan="2" */
    text-align:center;        
}


tr:nth-child(3) {   /* le nième tr de tr ( ici 3 ème ) ( even = pair / odd = impair )  on appelle cela une sous classe */
    background-color:brown
}

.bonjour tr td{  /* quand on commence par un point . on désigne une classe, ici on spécifie les tr et td ayant laclasse bonjour, tous les */
    background-color: aquamarine;   /* éléments ayant cette classe seront affectée */
}


/* table {
    border-radius: 15%;   border-radius arrondis les bords des tableaux 
}    */

#animal:hover {
    cursor:pointer  /* over fait en sorte que quand on passe la souris sur animal le curseur change d'aspect */
}

input[type="submit"], input[type="reset"] {   /* modification de l'aspect des boutons de type submit et reset */
    font-size : 1.7em;
    border-radius: 25%;
} 

/* si on veut faire des exceptions les paramètres d'aspect sur certains boutons, on faic ceci : */

/* input[type="submit"][value="submit"], input[type="reset"] {    et dans le html on évite de leur donner comme value "submit" pour ne pas qu'ils soient inclus 
    font-size : 1.7em;
    border-radius: 25%;
}   */


#message {   /* on bloque le resizing du champ de texte  [value=]*/
    resize:none
}


@keyframes animationimg {    /* on créé une animation qu'on appelle animationimg, au début elle va transformer scaleX en -1 puis elle va transformer scaleX en 1 et à la fin */
    0% {                   /*  elle va transformer scaleX en -1 */
        transform: scaleX(-1);
    }
    50% {
        transform: scaleX(1);
    }
    100% {
        transform: scaleX(-1);
    }
}

body {
    /* background-image: url(https://docs.gimp.org/2.6/fr/images/tutorials/quickie-jpeg-example.jpg); */
    background-size: 80px;
}

img {                            
    border: 3px dashed gray;      /* ajout et personnalisation de bordures */
    border-radius: 25px;           /* arrondis de bordures */
    opacity: 0.8;                  /* opacité de l'image à 80% */
    height: 50%; 
    max-width: 100%;  /* on rend l'image recursive/responsive */
    filter: blur(2px);  /* flouttage de l'image */
    filter: contrast(4);   /* gestion du contraste de l'image */
    animation: animationimg 2s ease-in infinite; /* je dit que l'élément img joue l'animationimg qu'elle doit durée 1,5s en fonctionnement en ease-in et elle ce joue */
                                               /*  un nombre infinie de fois */
}

img:hover {
    transform: scaleY(-1);  /* au passage de la souris l'image se retourne sur l'axe Y ( fonctionne aussi avec X ) */
}



fieldset {
    width: 10px;
}

.conteneur {
    background-color: black;
    height:600px;
    width: 100%; /* Prend toute la largeur de  */
    display: flex; /* L'affichage se met en mode flex */
    justify-content: space-around; /* justify-content joue vec la largeur quand le flex-direction est en row. quand flex-direction est en column il joue en haueur */

    align-items: center; /* align-items fait la meme chose que justify-content mais inversé c'est à dire joue avec la hauteur quand flex-direction est en row
                            et en largeurquand il est en column */
    /*flex-direction: column; */
    flex-wrap: wrap; /* le flex-wrap sert à remettre à la ligne quand les éléments n'ont plus de place dans la largeur quand il est en mode wrap
                        ( par défaut il est en mode  nowrap ) */
    align-content: space-around; /* fait la même chose que align-items mais il gère aussi les multilignes de conteneur */
    flex-direction: row;
    flex-wrap: wrap; /* le flex-wrap sert à remettre à la ligne quand les éléments n'ont plus de place dans la argeur quand il est en mode wrap */
}

.rouge {
    background-color: red;
    width:10%;
    height:100px;
    border: 2px solid white;

}

.vert {
    background-color: green;
    width:10%;
    height:100px;
    border: 2px solid white;
}

.orange {
    background-color: orange;
    width:10%;
    height:100px;
}


/* ------------------------------------------------------------------*/

.grandconteneur {
    background-color: rgb(83, 83, 83);
    width: 75%;
    height: 500px;
    display: flex; 
    justify-content: space-around;
    align-items: center;
}

.conteneur2 {
    background-color: aquamarine;
    width: 45%;
    height: 90%;
    display: flex;
    align-items: flex-end;
}


.conteneur2 h1 {
    color:darkgray;
    font-size: 3em;
    margin: 15px;
    font-family: Georgia, 'Times New Roman', Times, Serif;
}

#secondconteneur2 {
    background-color: transparent;
    align-content: space-between;
    justify-content: space-between;
    flex-wrap: wrap;
}

.moyenconteneur {
    width: 100%;
    height: 30%;
    background-color: aquamarine;
}

.petitconteneur {
    width: 45%;
    height: 30%;
    background-color: aquamarine;
}

/* --------brouillon----------------------------------------------------------*/

.carre {
    background-color: red;
    width: 50%;
    height: 500px;
    justify-content: center;
} 

.plate {
    background-color: green;
    width: 25%;
    height: 50px;
    
}





/* --------exo----------------------------------------------------------*/



.maindiv {
    background-color: blueviolet;
    width: 45%;
    height: 600px;
    justify-content:space-between;
    flex-wrap: wrap;
    display: flex;
    align-items:start;
    
    
    

    
}


.rrose {
    background-color: rgb(255, 72, 255);
    width:100%;
    height: 60px;
    
    
    
}

.oorange {

    background-color: orange;
    width: 45%;
    height: 200px;
    
}

.bbleu {

    background-color: rgb(0, 238, 255);
    width: 45%;
    height: 400px;

}

.rrouge {
    background-color: rgb(255, 0, 0);
    width: 45%;
    height: 100px;
    
    
    
    
}



/* --------exo_correction----------------------------------------------------------*/

.toutpetit {
    width: 45%;
    height:30%;
    background-color: aquamarine;
}

.violet {
    background-color: violet;
}

.Orange {
    background-color: orange;
}

.bleu {
    background-color: blue;
}

.red {
    background-color: red;
}

.flexbox {
    width: 70%;
    height:600px;
    background-color:blueviolet;
    display:flex;
    justify-content: space-around;
    align-items: center;
    flex-wrap: wrap;
}

.cote_gauche{
    /* background-color: aqua;   */
    width: 40%;
    height: 70%;
    display:flex;
    flex-wrap: wrap;
    justify-content: space-between;
}

.cote_droit{
    /*background-color: aqua; */
    width: 40%;
    height:70%;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}
.cote_droit .gauche{
    /*background-color: beige; */
    width: 45%;
    height:65%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.cote_droit .droite {
    /*background-color: beige; */
    width: 45%;
    height: 65%;
    display: flex;
    flex-direction: column;
    justify-content:space-between;
}

.cote_droit .droite .petite1 {
    width: 100%;
    height: 40%;
}

.cote_droit .droite .petite2 {
    width: 100%;
    height: 30%;
}

.cote_droit .droite .petite3 {
    width: 100%;
    height: 25%;
}

.cote_droit .gauche .petite1 {
    width:100%;
    height:35%;
}

.cote_droit .gauche .petite2 {
    width:100%;
    height:20%;
}

.cote_droit .gauche .petite3 {
    width:100%;
    height:35%;
}

.cote_droit .long {
    height: 30%;
}


.long{
    width: 100%;
    height: 20%;
}


.cote_gauche .gauche{
  /*   background-color:beige; temporaire pour le visuel */
    width: 50%;
    height: 75%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.cote_gauche .droite {
    
    width: 45%;
    height:75%
}

.cote_gauche .gauche .petite {
    width: 100%;
    height: 65%;
}

.cote_gauche .gauche .trespetite {
    width: 100%;
    height: 20%;
}


.flexbox h1 {
    display: block;
    margin: 2px;
    font-size: 4em;
    color: white;
    font-weight: bolder;
    font-family:Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif
    
}


